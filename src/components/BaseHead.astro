---
import { metadata } from "@/site.config";
import { getCanonicalURL } from "@/lib/getCanonicalURL";

type Props = {
  title?: string;
  description?: string;
  image?: {
    src: string;
    alt: string;
  } | null;
  canonicalURL?: URL | string | null;
};

const {
  title,
  description,
  image,
  canonicalURL = getCanonicalURL(Astro.url.pathname, Astro.site, false),
} = Astro.props;

---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta content="IE=edge" http-equiv="X-UA-Compatible" />

<title>{`${title} - ${metadata.name}`}</title>
<meta name="description" content={description || metadata.description} />

<!-- <link rel="icon" type="image/svg+xml" href="/favicon.svg" /> -->
<meta name="generator" content={Astro.generator} />

{/* Open Graph Meta */}
<meta property="og:type" content="website" />
<meta property="og:title" content={title || metadata.title} />
<meta property="og:description" content={description || metadata.description} />
<meta property="og:url" content={canonicalURL} />

{/* Twitter Meta */}
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content={metadata.twitter} />
<meta name="twitter:creator" content={metadata.twitter} />
<meta name="twitter:title" content={title || metadata.title} />
<meta
  name="twitter:description"
  content={description || metadata.description}
/>
{
  image && (
    <>
      <meta name="twitter:image" content={image.src} />
      <meta name="twitter:image:alt" content={image.alt} />
    </>
  )
}

<meta name="author" content={metadata.author.name} />

<link rel="canonical" href={canonicalURL} />
