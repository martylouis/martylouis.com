---
import Avatar from "@/components/Avatar.astro"
import AvatarBorder from "@/components/AvatarBorder.astro"
import { Container } from "@/components/Container"
import { Header } from "@/components/Header"
import HeaderNav from "@/components/HeaderNav.astro"
import { ThemeToggle } from "@/components/ThemeToggle"
import marty from "@/images/marty.jpg"
import { isCurrentPage, isHomePage } from "@/lib/utils"
import type { CSSProperties } from "react"

const isHome = isHomePage(Astro.url.pathname)
const isCurrent = isCurrentPage("/", Astro.url.pathname)
---

<header
  class="pointer-events-none relative z-50 flex flex-none flex-col"
  style={{
    height: "var(--header-height)",
    marginBottom: "var(--header-mb)",
  }}
>
  <Header isHomePage={isHome} client:load>
    <Container
      slot="avatarHomePage"
      className="top-0 order-last -mb-3 pt-3"
      style={{
        position: "var(--header-position)" as CSSProperties["position"],
      }}
    >
      <div
        class="top-[var(--avatar-top,theme(spacing.3))] w-full"
        style={{
          position: "var(--header-inner-position)" as CSSProperties["position"],
        }}
      >
        <div class="relative">
          <AvatarBorder
            class="absolute left-0 top-3 origin-left transition-opacity duration-1000"
            style={{
              opacity: "var(--avatar-border-opacity, 0)",
              transform: "var(--avatar-border-transform)",
            }}
          />
          <Avatar
            src={marty.src}
            alt="Marty"
            href="/"
            large={true}
            class="block size-16 origin-left"
            style={{ transform: "var(--avatar-image-transform)" }}
            aria-label="Home"
            aria-current={isCurrent ? "page" : undefined}
          />
        </div>
      </div>
    </Container>
    <Container
      slot="avatarHeader"
      className="top-[var(--header-top,theme(spacing.6))] w-full"
      style={{
        position: "var(--header-inner-position)" as CSSProperties["position"],
      }}
    >
      <div class="relative flex gap-4">
        <div class="flex flex-1">
          {
            !isHome && (
              <AvatarBorder>
                <Avatar
                  src={marty.src}
                  alt="Marty"
                  href="/"
                  aria-label="Home"
                  aria-current={isCurrent ? "page" : undefined}
                />
              </AvatarBorder>
            )
          }
        </div>
        <HeaderNav />
        <div class="flex justify-end md:flex-1">
          <div class="pointer-events-auto">
            <ThemeToggle client:load />
          </div>
        </div>
      </div>
    </Container>
  </Header>
</header>
{
  isHome && (
    <div
      aria-hidden="true"
      class="flex-none"
      style={{ height: "var(--content-offset)" }}
    />
  )
}
