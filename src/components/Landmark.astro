---
import { cn } from "@/lib/utils"
import type { Polymorphic } from "astro/types"
import { cva, type VariantProps } from "class-variance-authority"

type LandmarkTag = "header" | "footer" | "main" | "section" | "article"

type Props<Tag extends LandmarkTag> = Polymorphic<{ as: Tag }> &
  VariantProps<typeof landmarkVariants> & {
    label?: string
  }

export const landmarkVariants = cva("mx-auto max-w-xl w-full px-6 md:px-8", {
  variants: {
    block: {
      none: "",
      sm: "py-4",
      md: "py-8",
      lg: "py-16",
    },
    width: {
      sm: "max-w-xl",
      lg: "max-w-7xl",
    },
  },
})

const { as = "section", block = "none", width = "sm", ...props } = Astro.props

const Tag = as as LandmarkTag
---

<Tag {...props} class={cn(landmarkVariants({ block, width }), props.class)}>
  <slot />
</Tag>
