---
import BaseFooter from "@/components/BaseFooter.astro";
import BaseHead from "@/components/BaseHead.astro";
import BaseHeader from "@/components/BaseHeader.astro";
import "../styles/global.css";
const { title, description, ...meta } = Astro.props;
---

<html
  lang="en"
  class="dark h-full scroll-smooth selection:bg-teal-100 selection:text-neutral-800"
>
  <head>
    <BaseHead {title} {description} {...meta} />
  </head>
  <body
    class="bg-background text-foreground flex min-h-full w-full flex-col antialiased"
  >
    <div class="mx-auto max-w-xl px-4">
      <slot name="header">
        <BaseHeader />
      </slot>
      <slot name="main">
        <main id="main" class="flex-1">
          <slot />
        </main>
      </slot>
      <slot name="footer">
        <BaseFooter />
      </slot>
    </div>
    <script is:inline>
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script>
  </body>
</html>
